<!doctype html>
<html ng-app="lyticsApp">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <title>{% block title %}{% endblock %}</title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <link rel="stylesheet" href="{{ url_for('static',filename="css/main.css") }}">
        <!-- <script type="text/javascript" src="{{ url_for('static',filename="bower_components/d3/d3.min.js") }}"></script> -->
        <script type="text/javascript" src="{{ url_for('static',filename="js/vendor/d3.min.js") }}"></script>
    </head>
    <style>
        .axis path,
        .axis line {
          fill: none;
          stroke: #000;
          shape-rendering: crispEdges;
        }

        .x.axis path {
          display: none;
        }

        .line {
          fill: none;
          stroke: steelblue;
          stroke-width: 1.5px;
        }
    </style>
    <body>

    <div class="wrapper main-table">
      <div class="primary">
        <h1>{{ snapshot['event_name'] }}</h1>
        <div id="chart">
          <svg width="700" height="500"> </svg>
        </div>
        <script>

        var margin = {top: 20, right: 20, bottom: 30, left: 50},
        width = 700 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;

        var formatDate = d3.time.format("%d-%b-%y");

        var x = d3.time.scale()
            .range([0, width]);

        var y = d3.scale.linear()
            .range([height, 0]);

        var xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left");

        var line = d3.svg.line()
            .x(function(d) { return x(d.date); })
            .y(function(d) { return y(d.value); });

        var svg = d3.select("#chart svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        function parseDate(d) {
            return d3.time.format('%c')(d3.time.format('%Y-%m-%d').parse(d));
        }

        d3.json("/static/data.json", function(error, data) {
          if (error) throw error;

          // for (i = 0; i < data.length; i++) {
          //       data[i].date = parseDate(data[i].date);
          // }
          console.log(data);

          x.domain(d3.extent(data, function(d) { return d.date; }));
          y.domain(d3.extent(data, function(d) { return d.value; }));

          svg.append("g")
              .attr("class", "x axis")
              .attr("transform", "translate(0," + height + ")")
              .call(xAxis);

          svg.append("g")
              .attr("class", "y axis")
              .call(yAxis)
              .append("text")
              .attr("transform", "rotate(-90)")
              .attr("y", 6)
              .attr("dy", ".71em")
              .style("text-anchor", "end")
              .text("Price ($)");

          svg.append("path")
              .datum(data)
              .attr("class", "line")
              .attr("d", line);
          });

          function type(d) {
            d.date = formatDate.parse(d.date);
            d.value = +d.value;
            return d;
          }

        </script>
        {{ snapshot }}
      </div> <!-- /.primary -->
    </div>   <!-- /.wrapper .main-table -->

    </body>
</html>
